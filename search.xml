<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[让博客被Google搜索-Hexo/全站搜索/Tags/SEO]]></title>
      <url>%2F2017%2F02%2F04%2FHexo-tags-SEO-Search%2F</url>
      <content type="text"><![CDATA[摘要本文介绍了如何在Hexo博客配置全站搜索，创建tags页面和搜索引擎Google SEO。 正文创建好了Hexo装修简直是停不下来的节奏，一方面是既然做了Blog就像把他弄好，另一方，其实在做网站运营方面一直有很多方法没有机会尝试，这次有时间，有机会一定要按照自己的想法尝试一下。首先站内的文章希望有个比较好的结构，可以作为自己的知识储备，那么全站搜索必须做，其次作为运营要让博客能够被找到，SEO必须得做。接下来就是整个过程啦。 全站搜索看了下NexT主题推荐的搜索方式，默认是Swiftype 搜索。我注册了之后，很不幸的发现，这个是收费的，只有14天免费期，看了博主的issue发现，Local Search反而是比较靠谱的，也简单。 安装hexo-generator-searchdb插件，在站点的根目录下执行以下命令 1$ npm install hexo-generator-searchdb --save 编辑站点配置文件_config.yml，新增以下内容到任意位置： 12345search: path: search.xml field: post format: html limit: 10000 重新发布就OK了 添加标签tags为了被搜索引擎爬取，站点的主题最好比较明确，所以添加关键字是比较好的做法，每篇文章添加tags。 添加一个标签云页面，并在菜单中显示页面链接。 新建一个页面，命名为 tags 。命令如下： 1hexo new page &quot;tags&quot; 编辑刚新建的页面，将页面的类型设置为 tags ，主题将自动为这个页面显示标签云。 1234title: 所有标签date: 2017-02-04 11:07:24type: &quot;tags&quot;--- 注意：如果有启用多说 或者 Disqus 评论，默认页面也会带有评论。需要关闭的话，请添加字段 comments 并将值设置为 false，如： 12345title: 所有标签date: 2017-02-04 11:07:24type: &quot;tags&quot;comments: false--- 在菜单中添加链接。编辑主题的themes/next/_config.yml ，添加 tags 到 menu 中，如下: 1234menu: home: / archives: /archives tags: /tags 然后主站就多了一个标签的页面可以预览下了 http://aleonchen.com/tags/ 4.每篇文章在撰写的时候添加标签，如果是多标签是需要符合yml语法的，形如: tags: [tag1,tag2,tag3]比如我的这篇文章就是这么写的 12345---title: Hexo添加腾讯移动分析(MTA)支持date: 2017-02-03 20:26:37tags: [hexo, mta]--- 搜索 Search道理上还是Google做排名更加靠谱一些，百度做排名那是简直了。 首页title优化更改index.swig文件(your-hexo-site\themes\next\layout); 将下面这段代码 1&#123;% block title %&#125; &#123;&#123; config.title &#125;&#125; &#123;% endblock %&#125; 改成 1&#123;% block title %&#125; &#123;&#123; theme.keywords &#125;&#125; - &#123;&#123; config.title &#125;&#125;&#123;&#123; theme.description &#125;&#125; &#123;% endblock %&#125; 打开网站源码看看’description’里面都是自动摘抄的网站内容 注意：别堆砌关键字，整个标题一般不超过80个字符，可以通过chinaz的seo综合查询检查。 添加sitemap站点地图 安装sitemap站点地图自动生成插件 12npm install hexo-generator-sitemap --savenpm install hexo-generator-baidu-sitemap --save 在主题配置文件中添加一下配置 ，这里有的文章说的是在站点配置文章中添加，这个应该问题不大。 12345sitemap: path: sitemap.xml baidusitemap: path: baidusitemap.xml 注意：上面的格式一定要正确，一定要有缩进，不然会出错，我想信很多小伙伴因为没有缩进而不能编译的。 然后在主题配置文件中修改url为你的域名，例如我的 1url: http://aleonchen.com NexT主题默认的是http://yoursite.com配置好后，hexo g 就能在your-hexo-site\public 中生成sitemap.xml 和 baidusitemap.xml了;其中第一个是一会要提交给google的，后面那个看名字当然就是提交给Baidu的了； 在your-hexo-site\source中新建文件robots.txt,内容可以参照我的 123456789101112User-agent: *Allow: /Allow: /archives/Allow: /categories/Allow: /tags/Disallow: /vendors/Disallow: /js/Disallow: /css/Disallow: /fonts/Disallow: /vendors/Disallow: /fancybox/ 其中Allow后面的就是你的menu； 在robots.txt中添加下面的代码 12Sitemap: http://aleonchen.com/sitemap.xmlSitemap: http://aleonchen.com/baidusitemap.xml 请自行将aleonchen.com改成自己的域名,然后hexo d -g提交一下 配置Google站点管理工具（Google Webmaster tools）设置 Google站点管理工具 的验证字符串，用于提交 sitemap 获取 google site verification code 登录 Google Webmaster Tools，导航到验证方法，并选择 HTML Tag。将会获取到一段代码： 将 content 里面的 XXXXXXXXXXXXXXXXXXXXXXX 复制出来。 2.编辑站点配置themes/next/_config.yml，修改字段 google_site_verification。google_site_verification: XXXXXXXXXXXXXXXXXXXXXXX 3.让Google手动抓取，重建索引 测试robots.txt 提交站点地图 让Google抓取 关键是配置Google抓取工具，在这里我们填上我们需要抓取的url,不填这表示抓取首页，抓取方式可以选择桌面，智能手机等等，自行根据需要选择。填好url之后，点击抓取。提交完成后，提交至索引，根据提示操作就可以了，见图这个时候再去Google搜索，不上首页都难吧 参考参考了这篇文章，感谢作者Hexo Seo优化让你的博客在google搜索排名第一]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hexo添加腾讯移动分析(MTA)支持]]></title>
      <url>%2F2017%2F02%2F03%2FMTA%2F</url>
      <content type="text"><![CDATA[摘要本文介绍了为Hexo中NexT主题模板添加“腾讯移动分析(MTA)”的详细过程，并开源在GitHub上，可以了解为hexo添加第三方hexo的过程 正文缘起搭建好了Hexo的博客之后，今天有空稍微整理下，目前选了NexT的模板也是目前使用的主题，这个主题非常优雅，感谢作者iissnan。按照作者的配置指南，完善了下博客的配置，打开了多说评论、安装了阅读技术等等。 腾讯统计在弄数据统计的时候，发现除了Google、Baidu的统计，腾讯的统计模块还是非常旧的ta.qq.com的统计支持。这个应用腾讯官方已经基本不维护了，目前官方推荐的是使用腾讯移动分析，不仅可以支持应用统计、HTML5网页统计甚至还有小程序的统计。支持用户画像、区域和行为分析等。之前项目使用MTA比较熟悉，所以也想自己的Blog可以支持。 修改代码稍微研究了下NexT的代码，其实只要修改三个地方就可以了。 1.在NexT的_config.yml下面添加一个MTA的设置，MTA只要去创建一个HTML5的应用即可，填入你所申请的App Id 12# Tencent MTA IDtencent_mta: your app id 2.修改analytics.swig文件，添加一个新的js模板，路径为： 1layout/_scripts/third-party/analytics.swig 添加一行代码 1&#123;% include &apos;analytics/tencent-mta.swig&apos; %&#125; 3.在layout/_scripts/third-party/analytics目录下面添加一个新文件tencent-analytics.swig，内容为： 1234567891011121314&#123;% if theme.tencent_mta %&#125;&lt;script&gt; var _mtac = &#123;&#125;; (function() &#123; var mta = document.createElement(&quot;script&quot;); mta.src = &quot;http://pingjs.qq.com/h5/stats.js?v2.0.2&quot;; mta.setAttribute(&quot;name&quot;, &quot;MTAH5&quot;); mta.setAttribute(&quot;sid&quot;, &quot;&#123;&#123;theme.tencent_mta&#125;&#125;&quot;); var s = document.getElementsByTagName(&quot;script&quot;)[0]; s.parentNode.insertBefore(mta, s); &#125;)();&lt;/script&gt;&#123;% endif %&#125; 最后，在本地hexo server跑起来看了下 mta的代码有没有添加到页面，如果有了，就OK了。 代码 &amp; PR如果有问题，可以去看代码 https://github.com/aleonchen/hexo-theme-next 也给作者提交了一个pull request，希望能够添加到官方 😊]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[PyCharm调试LeanCloud设置]]></title>
      <url>%2F2017%2F01%2F28%2FPyCharm-Debug%2F</url>
      <content type="text"><![CDATA[摘要为LeanCloud开发者提供了在Pycharm下调试Python程序的一个解决办法 正文设置Pycharm之前被Asaka安利了PyCharm很多回，但是中间我自己想要用它的一个非常重要的原因就是他方便调试。在使用LeanCloud开发的过程中，经常碰到一些问题，我不是很清楚，打日志比较麻烦，而且有的时候比如特别想知道程序流程的时候，其实调试是个非常好的手段。但是在Sublime里面调试一直是个硬伤。而一般的IDE会做的比较好，比如PyCharm。 PyCharm的Debug设置可以自动识别virtualenv，简直就是福音。但是在LeanCloud做调试的时候有个麻烦的事情，就是普通的调试我们使用命令1lean up 来启动本地调试，但是在PyCharm里面不是特别的方便，后来发现只要通过 lean env取到Leancloud的环境变量，再设置的到PyCharm Debug Configuration的 “Environment Variables”里面即可 现在可以快乐的调试啦]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[一个高逼格的代码高亮配色gruvbox]]></title>
      <url>%2F2017%2F01%2F24%2Fgruvbox%2F</url>
      <content type="text"><![CDATA[摘要一个优秀的代码高亮的主题（gruvbox）在SubLime PyCharm Vim中的配置指南 正文之前被Asaka安利PyCharm无数回，今天心血来潮折腾PyCharm的配色，先是找来了Materail Theme (话说Sublime下面这绝对是个好配色）可是怎么弄都不太满意，于是找Asaka问了下PyCharm有没有好的代码高亮配色，他旋即扔了一个URL给我 https://github.com/morhetz/gruvbox)看到这个配色,眼睛一亮，好看。本来只是想搞定Pycharm就算了，谁曾想居然这个是Vim的主题，顺便也搞定了，然后看了下Sublime也有Package顺便一起搞定了。 PyCharm 包括JetBrains其他的用这个即可https://github.com/caleb/gruvbox-idea Sublime 直接在Package Control里面搜gruvbox Vim 就比较多点步骤了.vimrc 文件里面设置 1Plugin &apos;morhetz/gruvbox 然后:PluginInstall 搞定，在设置 12colorscheme gruvboxset background=dark &quot; Setting dark mode 终于三个编辑器看起来是一样的了，然后他又扔了个字体Fira Code给我😂，https://github.com/tonsky/FiraCode 看了下Sublime不支持ligatures，真心搞不动了。 BTW，我看到gruvbox里面介绍24bit的显示效果https://github.com/morhetz/gruvbox/wiki/Terminal-specific可我试了下没看到有什么不同，是我的显示器太渣？ 为此我还特地装了newVim，一样效果，谁能告诉？]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[小白从零搭建博客系统]]></title>
      <url>%2F2017%2F01%2F18%2F201701_buildBolg%2F</url>
      <content type="text"><![CDATA[摘要详细介绍了用Hexo从头免费搭建一个个人博客的教程，包含了macOS的工具准备，Markdown的撰写等等，博主会持续更新。 Last Update: 2017-02-04 正文起步搭建自己的博客系统，最终的目的是希望有一个称手的工具，可以便捷的表达自己的想法，成果和生活感悟。为了做到这一点需要很多的前提条件，需要写作、发布、更新、展示等等。在技术层面，需要一台电脑写作，需要写作软件，需要一台服务器，还需要一套管理和发布流程。Word哥，不要紧，本教程就是一步步整理我的整个搭建系统的流程，教小白从头搭建自己的博客系统。 PS: 初稿给小白看了下，表示完全看不懂 (⊙ˍ⊙)，看来还有好长的路要走 准备工作首先是要了解整个博客系统能够顺利发布需要那几个步骤，各位看官可以看下下面的流程图。（貌似hexo并不支持flowchat.js)先做个铺垫，基本上这是个程序员的建设历程，如果你觉得打开Terminal(命令行)，看着字符跑来跑去很有趣，那么你可以关闭本文了。本文有点高能，不太适合你，亦或者你是个颜值很高的人，你可以尝试联系我🍹。 设置篇大家觉得搞个bolg不就是去开个账号，然后开写就结束了？咳咳，作为一个动手能力强的程序员，怎么可能选择这么容易的方案？当然是从装脚手架开始，各种系统都要装上尝试下（比如在Markdown里面画流程图），然后打造一个轮子。为了记录，将需要的工具挨个记录和点评，排名不分前后。 因为还没有整理的非常好，这部分会不断的更新。 基础工具 - Oh My Zsh 官网大部分工程师从windows迁移过来的一个非常核心的原因就是windows下面没有非常好用的shell。因为web编程的服务端大多都是Linux，极度依赖shell，下面你也将看到，基本上整个系统的搭建也是极度依赖于shell的脚本和各种包管理体系。 Mac自带了Bash等shell环境，但是太弱了，比如高亮这个必备的功能就没有，所以定制不可避免。ZSH有什么好处我就不安利了，大家可以去看池大的文章（原文链接），包括后期的定制都可以找到很多线索。 自行安装脚本 wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh 我比较喜欢简洁的配色，所以用的主题是avit 需要一些基础的配置，后续在补充 安装系统 - Home brew 官网就像windows安装完系统，我的第一件事情就是安装360软件管家（别吐槽，这个货的确方便）就像苹果的App Store一样，有一个信任的软件安装入口和渠道是省了不少事情的。好在Mac下面有很多靠谱的软件安装工具。brew就是方便的软件之一，本身他是用ruby写就的，ruby也是包管理的鼻祖。 /usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot; 装完之后，几乎所有的软件都可以用brew来安装，比如brew cask sublime 装sublime text软件 代码管理 - Git整个系统的文档管理都是基于Git的版本管理系统，可以用brew安装brew install git 博客构建系统 - Hexo 官网在很早以前blog还是wordpress的天下，很多设计师和程序员靠定制wordpress的模板就可以横行天下。那是世界上最好的语言PHP写就的，不过太复杂，太古老，不是和我们新世纪的程序员。自从最大的男性交友社区Github推出pages服务以来，大家都在上面纷纷搭建系统，显得很酷(其实，主要是托管不要钱)。然后就出现了很多静态博客生成模板，最早期是Jekyll的，包括现在coding在内的很多git服务都有支持这个。但是但是，因为不可告人的原因，我选择了Hexo，而且的确比较好用 Hexo 官网介绍 A fast, simple &amp; powerful blog framework 先去安装下:npm install hexo-cli -g 又冒出一个npm, 这个暂且不表可以先用brew install npm完成 12345npm install hexo-cli -ghexo init blogcd blognpm installhexo server 弄完这几个命令，不出意外地话会看到 12INFO Start processingINFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop. 浏览器里面访问下http://localhost:4000/基本上，你就有了第一个blog，然后就可以开始愉快的写blog了？ Too Young, Too Naive 发布如果是你土豪，或者说你想自己尝试一下从零搭建一台博客服务器，那么你可以选择自己买台服务器。否则还是推荐用Github的Pages服务。一来，你有地方可以安防自己的博客文章，顺带有版本管理。二来，你也有了免费的博客空间，再搭配Hexo就可以把博客从本地搬到网上了，不过这两年GibHub经常被墙，还是要小心哈。注册号Github创建好工程，创建项目仓库，记得在Setting里面修改GitHub Pages的相关设置，我这里选择master branch 另外千万记得要设置repository名字为username.github.io，否则js和css静态文件是不会解析的，详情查看GitHub Pages的链接介绍 完事了修改_config.yml 中的deploy设置 1234deploy: type: git repo: https://github.com/aleonchen/aleonchen.github.io.git branch: master 刚才咱们已经用hexo server看过本地的博客没问题了。终于开始要发布到网上了 12hexo ghexo d 纳尼，报错ERROR Deployer not found: git有人说hexo不支持https的git，其实不是的在V3里面可以的是的你少了个插件npm install hexo-deployer-git --save 第一次运行因为没有登录过github可能会出现 123456*** Please tell me who you are.Run git config --global user.email &quot;you@example.com&quot; git config --global user.name &quot;Your Name&quot; 配置好即可 应该可以看到效果了，访问下你的blog地址看看 更换主题Hexo的好处之一就是容易更换主题，比如 magnetic Next 下面以magnetic为例：首先在目录下安装 1git clone https://github.com/klugjo/hexo-theme-magnetic themes/magnetic 然后更新一下_config.yml文件将主题更换为 magnetic 1234# Extensions## Plugins: http://hexo.io/plugins/## Themes: http://hexo.io/themes/theme: magnetic 域名首先得有一个自己的域名，各位可以去各大网站申请自己的域名，国内就是阿里云腾讯云，国外推荐Godaddy。在CName中设置域名指向自己的github page 主页，我这里是aleonchen.github.io然后在Github Pages -&gt; Custom domain 设置自己的域名aleonchen.com 这里有个坑爹的问题，之前在CName里面设置了’blog.aleonchen.com’，后来忘记了，在setting里面怎么修改都不对。发现只要在source/CName文件里面标记正确”aleonchen.com”就可以了，mark下，以免忘记 写作篇Markdown编辑器 - MWeb 官网Markdown是互联网之子的伟大发明，可以用纯文本的方式管理自己的文档，但是效果比word和pages这些二进制的更加优秀。MWeb是国人的独立开发者的作品，赞誉不胜枚举，现在你们看到的这篇文章也是MWeb这个工具写成的，后面关于发布流程的自动化也是基于这个工具。相关的介绍比较多了，少数派上有不少比如：这里 图片问题在写博客的时候会碰到一个问题，就是当你使用MWeb在本地撰写文章的时候，图片显示都是好的，但是发布到Github就无法显示图片了。仔细看了下其实是图片路径的问题。按照下面两个步骤操作既可以。 在MWeb引入的时候，只引入source目录 引入的时候设置拖入图片的保存位置为绝对路径,见下图(如果已经设置过，可以双击source) 常规维护每次写完文章之后输入这个即可1hexo -g d Hexo 配置技巧首页显示文章摘要 参考链接在next主题的_config.yml文件中，查找auto_excerpt，找到如下部分： 1234# Automatically Excerptauto_excerpt:enable: falselength: 150 只要把这个enable 改为true就可以实现首页显示预览，而不用全部显示！ 参考翻墙翻墙是基础，如果你连翻墙是什么都不知道，请自己去Google（哥只能帮你到这里了 ┑(￣Д ￣)┍）。 我试过非常多的翻墙工具和软件，一般来说分两种，自建和第三方，那么选哪种呢？理论上来说这两个都需要，因为你不知道谁会挂掉，但是如果第三方使用付费的，相对还是靠谱的，毕竟是商业公司。 自建VPN，买台国外的服务器，顺便做代理。比较好搭建的是PPTP，但是macOS从v12之后就不再支持这种不安全的VPN方案，目前比较适合的是使用SS，目前还没有搭建过，过两天尝试下。BTW，国外的服务器靠谱的还是不少比如DigitalOcean, Linode等等，这又是一篇话题。 第三方VPN 免费的用过goAgent，收费的试过Greenvpn开始，曲径等等。目前一直使用的是云梯。 八卦一下,听过一期云梯创始人的讲座，他说“制作云梯的初衷就是，翻墙是每个人的诉求，但是翻墙比较复杂，让大家都和GFW斗智斗勇，太浪费时间，恰好我们有经验,交给我们好了”。这个和我的价值观非常符合，节省大家的时间就是生产力，而实际上他们也没有让我失望，一直是我主力的翻墙手段之一。BTW: 云梯出了App可以方便的在macOS和iOS切换状态，并且是有自动选择路由的功能，国内不代理，国外才代理（是不是好贴心） 参考文章使用Github Pages搭建个人博客]]></content>
    </entry>

    
  
  
</search>
